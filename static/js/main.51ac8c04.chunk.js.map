{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","handleChange","App","state","searchField","event","setState","target","value","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAiBeA,G,MAdF,SAACC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEA,UAAU,aACVC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCETC,G,MAVE,SAACR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCMZM,G,MAXG,SAACX,GACjB,OACE,uBACEC,UAAU,SACVW,KAAK,SACLC,YAAab,EAAMa,YACnBC,SAAUd,EAAMe,iBC+BPC,G,kNAlCbC,MAAQ,CACNR,SAAU,GACVS,YAAa,I,EAQfH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEF,YAAaC,EAAME,OAAOC,S,kEAPvB,IAAD,OAClBC,MAAM,8CAA8CC,MAAK,SAACC,GACxDA,EAASC,OAAOF,MAAK,SAACG,GAAD,OAAW,EAAKP,SAAS,CAAEX,SAAUkB,Y,+BAQpD,IAAD,EAC2BC,KAAKX,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YAGZW,EAAmBpB,EAASqB,QAAO,SAAC1B,GAAD,OACvCA,EAAQE,KAAKyB,cAAcC,SAASd,EAAYa,kBAElD,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEY,YAAY,kBACZE,aAAca,KAAKb,eAErB,cAAC,EAAD,CAAUN,SAAUoB,W,GA7BVI,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.51ac8c04.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        className=\"card-image\"\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport \"./CardList.css\";\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./SearchBox.css\";\r\n\r\nconst SearchBox = (props) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={props.placeholder}\r\n      onChange={props.handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\nimport CardList from \"./components/CardList/CardList\";\nimport SearchBox from \"./components/SearchBox/SearchBox\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    monsters: [],\n    searchField: \"\",\n  };\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then((response) => {\n      response.json().then((users) => this.setState({ monsters: users }));\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    // const monsters = this.state.monsters\n    // const searcField = this.state.searchField\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search Monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}